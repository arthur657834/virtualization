10.1.50.160 controller   
10.1.50.161 network    
	网卡1：10.1.50.161
	网卡2：10.1.51.161
	网卡3：无地址，不要修改 HWADDR 和 UUID 关键字的内容
		TYPE=Ethernet
		BOOTPROTO=none
		NAME=ens35
		DEVICE=ens35
		ONBOOT=yes
		UUID=1777ed92-ff58-7956-b8b3-ed928f82e0c8

10.1.50.162 compute1     
	网卡1：
	网卡2：10.1.51.162
	


echo 10.1.50.160 controller     >> /etc/hosts
echo 10.1.50.161 network        >> /etc/hosts
echo 10.1.50.162 compute1       >> /etc/hosts

hostnamectl set-hostname controller
hostnamectl set-hostname network
hostnamectl set-hostname compute1

yum install -y yum-plugin-priorities epel-release centos-release-openstack mariadb mariadb-server MySQL-python rabbitmq-server 

yum install -y openstack-selinux openstack-glance python-glanceclient

controller:
	yum install openstack-keystone python-keystoneclient -y
	yum install openstack-glance python-glanceclient -y 
	yum install openstack-nova-api openstack-nova-cert openstack-nova-conductor openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler python-novaclient -y 
	vi /etc/my.cnf
	bind-address = 10.1.50.160
	default-storage-engine = innodb
	innodb_file_per_table
	collation-server = utf8_general_ci
	init-connect = 'SET NAMES utf8'
	character-set-server = utf8

	systemctl enable mariadb.service 
	systemctl start mariadb.service
	mysql_secure_installation 
	
	systemctl enable rabbitmq-server.service 
	systemctl start rabbitmq-server.service #port=5672/tcp
	rabbitmqctl change_password guest RABBIT_PASS 
	
	mysql -uroot -p123456
	CREATE DATABASE keystone;
	GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'KEYSTONE_DBPASS';
	GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'KEYSTONE_DBPASS';
	CREATE DATABASE glance; 
	GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'GLANCE_DBPASS'; 
	GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'GLANCE_DBPASS'; 
	CREATE DATABASE nova; 
	GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'NOVA_DBPASS';
	GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'NOVA_DBPASS';

	vi /etc/keystone/keystone.conf
	[DEFAULT]
	admin_token = 9bff71a365e23c5d61f3   # openssl rand -hex 10 产生的随机值
	verbose = True
	
	[database]
	connection = mysql://keystone:KEYSTONE_DBPASS@controller/keystone
	
	[token]
	provider = keystone.token.providers.uuid.Provider
	driver = keystone.token.persistence.backends.sql.Token
	
	[revoke]
	driver = keystone.contrib.revoke.backends.sql.Revoke
	
	#创建管理证书与密钥，设置相关文件权限
	keystone-manage pki_setup --keystone-user keystone --keystone-group keystone
	chown -R keystone:keystone /var/log/keystone
	chown -R keystone:keystone /etc/keystone/ssl
	chmod -R o-rwx /etc/keystone/ssl
	
	#填充数据库数据
	su -s /bin/sh -c "keystone-manage db_sync" keystone <=> keystone-manage db_sync
	
	systemctl enable openstack-keystone.service
	systemctl start openstack-keystone.service
	
	#默认情况下,认证身份令牌到期后不会删除，会一直存在数据库中，所以加一下自动删除
	(crontab -l -u keystone 2>&1 | grep -q token_flush) || echo '@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1' >> /var/spool/cron/keystone
	
	#配置管理令牌与端点
	export OS_SERVICE_TOKEN=9bff71a365e23c5d61f3
	export OS_SERVICE_ENDPOINT=http://controller:35357/v2.0
	
	#填加项目、用户与角色
	keystone tenant-create --name admin --description "Admin Tenant"
	keystone user-create --name admin --pass ADMIN_PASS --email root@localhost
	keystone role-create --name admin 
	keystone user-role-add --tenant admin --user admin --role admin
	keystone role-create --name _member_
	keystone user-role-add --tenant admin --user admin --role _member_ 
	
	keystone tenant-create --name demo --description "Demo Tenant" 
	keystone user-create --name demo --pass DEMO_PASS --email EMAIL_ADDRESS 
	keystone user-role-add --tenant demo --user demo --role _member_
	keystone tenant-create --name service --description "Service Tenant"
	keystone service-create --name keystone --type identity --description "OpenStack Identity"
	keystone endpoint-create --service-id $(keystone service-list | awk '/ identity / {print $2}') --publicurl http://controller:5000/v2.0 --internalurl http://controller:5000/v2.0 --adminurl http://controller:35357/v2.0 --region regionOne 
	
	keystone --os-tenant-name admin --os-username admin --os-password ADMIN_PASS --os-auth-url http://controller:35357/v2.0 token-get 
	keystone --os-tenant-name admin --os-username admin --os-password ADMIN_PASS --os-auth-url http://controller:35357/v2.0 tenant-list
	
	vi admin-openrc.sh
	export OS_TENANT_NAME=admin 
	export OS_USERNAME=admin 
	export OS_PASSWORD=ADMIN_PASS 
	export OS_AUTH_URL=http://controller:35357/v2.0  
	
	vi demo-openrc.sh 
	export OS_TENANT_NAME=demo 
	export OS_USERNAME=demo 
	export OS_PASSWORD=DEMO_PASS 
	export OS_AUTH_URL=http://controller:5000/v2.0
	
	
	keystone user-create --name glance --pass GLANCE_PASS 
	keystone user-role-add --user glance --tenant service --role admin 
	keystone service-create --name glance --type image --description "OpenStack Image Service" 
	keystone endpoint-create --service-id $(keystone service-list | awk '/ image / {print $2}') --publicurl http://controller:9292 --internalurl http://controller:9292 --adminurl http://controller:9292 --region regionOne 
	
	vi /etc/glance/glance-api.conf
	[DEFAULT] 
	verbose=True 
	[database] 
	connection = mysql://glance:GLANCE_DBPASS@controller/glance 
	[keystone_authtoken] 
	auth_uri = http://controller:5000/v2.0 
	identity_uri = http://controller:35357 
	admin_tenant_name = service 
	admin_user = glance 
	admin_password = GLANCE_PASS 
	[paste_deploy] 
	flavor = keystone 
	[store_type_location_strategy] 
	[profiler] 
	[task] 
	[glance_store] 
	default_store = file 
	filesystem_store_datadir = /var/lib/glance/images/
	
	vi /etc/glance/glance-registry.conf
	[DEFAULT] 
	verbose=True 
	[database] 
	connection = mysql://glance:GLANCE_DBPASS@controller/glance 
	[keystone_authtoken] 
	auth_uri = http://controller:5000/v2.0 
	identity_uri = http://controller:35357 
	admin_tenant_name = service 
	admin_user = glance 
	admin_password = GLANCE_PASS 
	[paste_deploy] 
	flavor = keystone 
	[profiler]
	
	 su -s /bin/sh -c "glance-manage db_sync" glance
	 systemctl enable openstack-glance-api.service openstack-glance-registry.service
	 systemctl start openstack-glance-api.service openstack-glance-registry.service
	 
	 mkdir /tmp/images 
	 上传img至该目录下
	 
	 source /root/admin-openrc.sh
	 cd /tmp/images/
	 glance image-create --name "CentOS-7-x86_64-Minimal-1511" --file CentOS-7-x86_64-Minimal-1511.iso --disk-format qcow2 --container-format bare --is-public True --progress 
	 glance image-list 
	 
	 source /root/admin-openrc.sh
	 keystone user-create --name nova --pass NOVA_PASS
	 keystone user-role-add --user nova --tenant service --role admin
	 
	 keystone service-create --name nova --type compute --description "OpenStack Compute"
	 keystone endpoint-create --service-id $(keystone service-list | awk '/ compute / {print $2}') --publicurl http://controller:8774/v2/%\(tenant_id\)s --internalurl http://controller:8774/v2/%\(tenant_id\)s --adminurl http://controller:8774/v2/%\(tenant_id\)s --region regionOne

	 vi /etc/nova/nova.conf
	[database]
	connection = mysql://nova:NOVA_DBPASS@controller/nova  #连数据库
	
	rpc_backend = rabbit                      #连 rabbit
	rabbit_host = controller
	rabbit_password = RABBIT_PASS
	
	auth_strategy = keystone    #使用keystone做身份认证
	my_ip = 10.1.50.160
	vncserver_listen = 10.1.50.160
	vncserver_proxyclient_address = 10.1.50.160
	verbose = True
	
	[keystone_authtoken]                                           #连到keystone
	auth_uri = http://controller:5000/v2.0 
	identity_uri = http://controller:35357
	admin_tenant_name = service
	admin_user = nova
	admin_password = NOVA_PASS
	
	[glance]    #glance  主机位置
	host = controller 
	
	su -s /bin/sh -c "nova-manage db sync" nova
	systemctl enable openstack-nova-api.service openstack-nova-cert.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service 
	systemctl start openstack-nova-api.service openstack-nova-cert.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
	
compute1：
	yum install openstack-nova-compute sysfsutils -y
	
	[DEFAULT]
	rpc_backend = rabbit  
	rabbit_host = controller
	rabbit_password = RABBIT_PASS
	
	auth_strategy = keystone 
	
	my_ip =10.0.0.31    #本机的管理ip
	
	vnc_enabled = True              #novnc使用
	vncserver_listen = 0.0.0.0
	vncserver_proxyclient_address = 10.0.0.31
	novncproxy_base_url = http://controller:6080/vnc_auto.html 
	
	verbose = True 
	
	[keystone_authtoken]
	
	auth_uri = http://controller:5000/v2.0
	identity_uri = http://controller:35357
	admin_tenant_name = service
	admin_user = nova
	admin_password = NOVA_PASS
	[glance]
	
	host = controller

	
	systemctl enable libvirtd.service openstack-nova-compute.service
	systemctl start libvirtd.service
	systemctl start openstack-nova-compute.service
	
	在controller上操作
	source admin-openrc.sh
	nova service-list

	flush privileges

source admin-openrc.sh
nova service-list
nova image-list

network:
	yum install openstack-neutron openstack-neutron-ml2 python-neutronclient which -y
	yum -y install openstack-nova-scheduler openstack-nova-conductor openstack-nova-api
	yum -y install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch
	
	mysql -u root -p123456
	CREATE DATABASE neutron;
	GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'NEUTRON_DBPASS';
	GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'NEUTRON_DBPASS';
	
	source admin-openrc.sh
	
	keystone user-create --name neutron --pass NEUTRON_PASS
	keystone user-role-add --user neutron --tenant service --role admin
	keystone service-create --name neutron --type network --description "OpenStack Networking"
	keystone endpoint-create --service-id $(keystone service-list | awk '/ network / {print $2}') --publicurl http://controller:9696 --adminurl http://controller:9696 --internalurl http://controller:9696 --region regionOne

	vi /etc/neutron/neutron.conf
	[database]
	connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron
	
	在 [DEFAULT] 段，对 RabbitMQ 消息代理相关参数进行配置：
	[DEFAULT]
	verbose = True
	rpc_backend = rabbit
	rabbit_host = controller
	rabbit_password = RABBIT_PASS
	
	在 [DEFAULT] 和 [keystone_authtoken] 部分，配置身份认证服务的访问：
	[DEFAULT]
	...
	auth_strategy = keystone
	[keystone_authtoken]
	...
	auth_uri = http://controller:5000/v2.0
	identity_uri = http://controller:35357
	admin_tenant_name = service
	admin_user = neutron
	admin_password = NEUTRON_PASS
	
	在 [DEFAULT] 部分，启用 Modular Layer 2 (ML2) 插件、router 服务和 overlapping IP 地址：
	[DEFAULT]
	...
	core_plugin = ml2
	service_plugins = router
	allow_overlapping_ips = True
	
	在 [DEFAULT] 部分，配置 Networking 以通知 Compute 网络拓扑的变化：
	[DEFAULT]
	...
	notify_nova_on_port_status_changes = True
	notify_nova_on_port_data_changes = True
	nova_url = http://controller:8774/v2
	nova_admin_auth_url = http://controller:35357/v2.0
	nova_region_name = regionOne
	nova_admin_username = nova
	nova_admin_tenant_id = SERVICE_TENANT_ID
	nova_admin_password = NOVA_PASS


	source admin-openrc.sh
	keystone tenant-get service
	
	vi /etc/nova/nova.conf
	[DEFAULT]
	...
	network_api_class = nova.network.neutronv2.api.API
	security_group_api = neutron
	linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
	firewall_driver = nova.virt.firewall.NoopFirewallDriver
	
	[neutron]
	...
	url = http://controller:9696
	auth_strategy = keystone
	admin_auth_url = http://controller:35357/v2.0
	admin_tenant_name = service
	admin_username = neutron
	admin_password = NEUTRON_PASS

	
	network:
	vi /etc/neutron/plugins/ml2/ml2_conf.ini
	
	[ml2]
	...
	type_drivers = flat,gre
	tenant_network_types = gre
	mechanism_drivers = openvswitch
	
	[ml2_type_gre]
	...
	tunnel_id_ranges = 1:1000
	
	[securitygroup]
	...
	enable_security_group = True
	enable_ipset = True
	firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
	
	ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
	

	su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade juno" neutron
	
	systemctl restart openstack-nova-api.service openstack-nova-scheduler.service openstack-nova-conductor.service
	systemctl enable neutron-server.service
	systemctl start neutron-server.service
	
	
	source admin-openrc.sh
	neutron ext-list
	
	vi /etc/sysctl.conf
	net.ipv4.ip_forward=1
	net.ipv4.conf.all.rp_filter=0
	net.ipv4.conf.default.rp_filter=0
	
	sysctl -p
	

	
	
	
	
	
	

	
	
	
	
	
	
	
	

	
	
	





